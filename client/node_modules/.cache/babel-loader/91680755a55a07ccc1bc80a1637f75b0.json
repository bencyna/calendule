{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\benja\\\\OneDrive\\\\Desktop\\\\Code\\\\project3\\\\calendule\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\benja\\\\OneDrive\\\\Desktop\\\\Code\\\\project3\\\\calendule\\\\client\\\\src\\\\pages\\\\calendar.js\";\nimport { MonthlyBody, MonthlyCalendar, MonthlyNav, DefaultMonthlyEventItem } from \"@zach.codes/react-calendar\";\nimport React, { useState } from \"react\";\n\nfunction MyMonthlyCalendar() {\n  var _this = this;\n\n  var _ref = useState < Date > new Date(),\n      _ref2 = _slicedToArray(_ref, 2),\n      currentMonth = _ref2[0],\n      setCurrentMonth = _ref2[1];\n\n  return /*#__PURE__*/React.createElement(MonthlyCalendar, {\n    currentMonth: currentMonth,\n    onCurrentMonthChange: function onCurrentMonthChange(date) {\n      return setCurrentMonth(date);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(MonthlyNav, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(MonthlyBody, {\n    events: [//   { title: \"Call John\", date: subHours(new Date(), 2) },\n    //   { title: \"Call John\", date: subHours(new Date(), 1) },\n    {\n      title: \"Meeting with Bob\",\n      date: new Date()\n    }],\n    renderDay: function renderDay(data) {\n      return data.map(function (item, index) {\n        return /*#__PURE__*/React.createElement(DefaultMonthlyEventItem, {\n          key: index,\n          title: item.title,\n          date: item.date,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }\n        });\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default MyMonthlyCalendar;","map":{"version":3,"sources":["C:/Users/benja/OneDrive/Desktop/Code/project3/calendule/client/src/pages/calendar.js"],"names":["MonthlyBody","MonthlyCalendar","MonthlyNav","DefaultMonthlyEventItem","React","useState","MyMonthlyCalendar","Date","currentMonth","setCurrentMonth","date","title","data","map","item","index"],"mappings":";;AAAA,SACEA,WADF,EAEEC,eAFF,EAGEC,UAHF,EAIEC,uBAJF,QAKO,4BALP;AAMA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,SAASC,iBAAT,GAA6B;AAAA;;AAC3B,aAAsCD,QAAQ,GAAGE,IAAX,GAAkB,IAAIA,IAAJ,EAAxD;AAAA;AAAA,MAAKC,YAAL;AAAA,MAAmBC,eAAnB;;AAEA,sBACE,oBAAC,eAAD;AACE,IAAA,YAAY,EAAED,YADhB;AAEE,IAAA,oBAAoB,EAAE,8BAACE,IAAD;AAAA,aAAUD,eAAe,CAACC,IAAD,CAAzB;AAAA,KAFxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,eAKE,oBAAC,WAAD;AACE,IAAA,MAAM,EAAE,CACN;AACA;AACA;AAAEC,MAAAA,KAAK,EAAE,kBAAT;AAA6BD,MAAAA,IAAI,EAAE,IAAIH,IAAJ;AAAnC,KAHM,CADV;AAME,IAAA,SAAS,EAAE,mBAACK,IAAD;AAAA,aACTA,IAAI,CAACC,GAAL,CAAS,UAACC,IAAD,EAAOC,KAAP;AAAA,4BACP,oBAAC,uBAAD;AACE,UAAA,GAAG,EAAEA,KADP;AAEE,UAAA,KAAK,EAAED,IAAI,CAACH,KAFd;AAGE,UAAA,IAAI,EAAEG,IAAI,CAACJ,IAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADO;AAAA,OAAT,CADS;AAAA,KANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF;AAwBD;;AAED,eAAeJ,iBAAf","sourcesContent":["import {\r\n  MonthlyBody,\r\n  MonthlyCalendar,\r\n  MonthlyNav,\r\n  DefaultMonthlyEventItem,\r\n} from \"@zach.codes/react-calendar\";\r\nimport React, { useState } from \"react\";\r\n\r\nfunction MyMonthlyCalendar() {\r\n  let [currentMonth, setCurrentMonth] = useState < Date > new Date();\r\n\r\n  return (\r\n    <MonthlyCalendar\r\n      currentMonth={currentMonth}\r\n      onCurrentMonthChange={(date) => setCurrentMonth(date)}\r\n    >\r\n      <MonthlyNav />\r\n      <MonthlyBody\r\n        events={[\r\n          //   { title: \"Call John\", date: subHours(new Date(), 2) },\r\n          //   { title: \"Call John\", date: subHours(new Date(), 1) },\r\n          { title: \"Meeting with Bob\", date: new Date() },\r\n        ]}\r\n        renderDay={(data) =>\r\n          data.map((item, index) => (\r\n            <DefaultMonthlyEventItem\r\n              key={index}\r\n              title={item.title}\r\n              date={item.date}\r\n            />\r\n          ))\r\n        }\r\n      />\r\n    </MonthlyCalendar>\r\n  );\r\n}\r\n\r\nexport default MyMonthlyCalendar;\r\n"]},"metadata":{},"sourceType":"module"}