{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\benja\\\\OneDrive\\\\Desktop\\\\Code\\\\project3\\\\calendule\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\benja\\\\OneDrive\\\\Desktop\\\\Code\\\\project3\\\\calendule\\\\client\\\\src\\\\components\\\\Notifications\\\\index.js\";\nimport React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport FeatherIcon from \"feather-icons-react\";\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport API from \"../../utils/API\";\n\nfunction Notifications() {\n  var _this = this;\n\n  var _useStoreContext = useStoreContext(),\n      _useStoreContext2 = _slicedToArray(_useStoreContext, 2),\n      state = _useStoreContext2[0],\n      dispatch = _useStoreContext2[1];\n\n  useEffect(function () {\n    console.log(state.pendingEvents);\n    API.getPending().then(function (res) {\n      console.log(res);\n      dispatch({\n        type: \"PENDINGEVENT\",\n        pendingEvents: [res.data]\n      });\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"#\",\n    className: \"notification nav-link dropdown-toggle\",\n    \"data-bs-toggle\": \"dropdown\",\n    role: \"button\",\n    \"aria-haspopup\": \"true\",\n    \"aria-expanded\": \"false\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FeatherIcon, {\n    icon: \"bell\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"badge\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, \"3\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dropdown-menu\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, state.pendingEvents.map(function (event) {\n    return /*#__PURE__*/React.createElement(Link, {\n      className: \"dropdown-item\",\n      to: \"#\",\n      key: event.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }\n    }, event.title);\n  })));\n}\n\nexport default Notifications;","map":{"version":3,"sources":["C:/Users/benja/OneDrive/Desktop/Code/project3/calendule/client/src/components/Notifications/index.js"],"names":["React","useEffect","Link","FeatherIcon","useStoreContext","API","Notifications","state","dispatch","console","log","pendingEvents","getPending","then","res","type","data","catch","err","map","event","id","title"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,SAASC,eAAT,QAAgC,yBAAhC;AACA,OAAOC,GAAP,MAAgB,iBAAhB;;AAEA,SAASC,aAAT,GAAyB;AAAA;;AACvB,yBAA0BF,eAAe,EAAzC;AAAA;AAAA,MAAOG,KAAP;AAAA,MAAcC,QAAd;;AAEAP,EAAAA,SAAS,CAAC,YAAM;AACdQ,IAAAA,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACI,aAAlB;AACAN,IAAAA,GAAG,CAACO,UAAJ,GACGC,IADH,CACQ,UAACC,GAAD,EAAS;AACbL,MAAAA,OAAO,CAACC,GAAR,CAAYI,GAAZ;AACAN,MAAAA,QAAQ,CAAC;AACPO,QAAAA,IAAI,EAAE,cADC;AAEPJ,QAAAA,aAAa,EAAE,CAACG,GAAG,CAACE,IAAL;AAFR,OAAD,CAAR;AAID,KAPH,EAQGC,KARH,CAQS,UAACC,GAAD;AAAA,aAAST,OAAO,CAACC,GAAR,CAAYQ,GAAZ,CAAT;AAAA,KART;AASD,GAXQ,EAWN,EAXM,CAAT;AAaA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AACE,IAAA,EAAE,EAAC,GADL;AAEE,IAAA,SAAS,EAAC,uCAFZ;AAGE,sBAAe,UAHjB;AAIE,IAAA,IAAI,EAAC,QAJP;AAKE,qBAAc,MALhB;AAME,qBAAc,OANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAa,IAAA,IAAI,EAAC,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CARF,eAWE;AAAM,IAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAXF,CADF,eAcE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGX,KAAK,CAACI,aAAN,CAAoBQ,GAApB,CAAwB,UAACC,KAAD,EAAW;AAClC,wBACE,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAC,eAAhB;AAAgC,MAAA,EAAE,EAAC,GAAnC;AAAuC,MAAA,GAAG,EAAEA,KAAK,CAACC,EAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,KAAK,CAACE,KADT,CADF;AAKD,GANA,CADH,CAdF,CADF;AA0BD;;AAED,eAAehB,aAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport FeatherIcon from \"feather-icons-react\";\r\nimport { useStoreContext } from \"../../utils/GlobalState\";\r\nimport API from \"../../utils/API\";\r\n\r\nfunction Notifications() {\r\n  const [state, dispatch] = useStoreContext();\r\n\r\n  useEffect(() => {\r\n    console.log(state.pendingEvents);\r\n    API.getPending()\r\n      .then((res) => {\r\n        console.log(res);\r\n        dispatch({\r\n          type: \"PENDINGEVENT\",\r\n          pendingEvents: [res.data],\r\n        });\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Link\r\n        to=\"#\"\r\n        className=\"notification nav-link dropdown-toggle\"\r\n        data-bs-toggle=\"dropdown\"\r\n        role=\"button\"\r\n        aria-haspopup=\"true\"\r\n        aria-expanded=\"false\"\r\n      >\r\n        <span>\r\n          <FeatherIcon icon=\"bell\" />\r\n        </span>\r\n        <span className=\"badge\">3</span>\r\n      </Link>\r\n      <div className=\"dropdown-menu\">\r\n        {state.pendingEvents.map((event) => {\r\n          return (\r\n            <Link className=\"dropdown-item\" to=\"#\" key={event.id}>\r\n              {event.title}\r\n            </Link>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Notifications;\r\n"]},"metadata":{},"sourceType":"module"}