{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\benja\\\\OneDrive\\\\Desktop\\\\Code\\\\project3\\\\calendule\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\benja\\\\OneDrive\\\\Desktop\\\\Code\\\\project3\\\\calendule\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\Users\\\\benja\\\\OneDrive\\\\Desktop\\\\Code\\\\project3\\\\calendule\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\benja\\\\OneDrive\\\\Desktop\\\\Code\\\\project3\\\\calendule\\\\client\\\\src\\\\components\\\\AltUserCal\\\\index.js\";\nimport React, { useState, useEffect } from \"react\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport API from \"../../utils/API\";\nimport { useParams } from \"react-router-dom\";\nimport EventInput from \"../eventInput\";\nimport { useStoreContext } from \"../../utils/GlobalState\";\n\nfunction AltUserCalendar() {\n  var _useParams = useParams(),\n      id = _useParams.id;\n\n  var _useStoreContext = useStoreContext(),\n      _useStoreContext2 = _slicedToArray(_useStoreContext, 2),\n      state = _useStoreContext2[0],\n      dispatch = _useStoreContext2[1];\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      dateClicked = _useState4[0],\n      setDateClicked = _useState4[1];\n\n  useEffect(function () {\n    API.getUser(id).then(function (res) {\n      console.log(res.data);\n      setUser(res.data);\n    });\n  }, []);\n\n  var handleDateClick = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(arg) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log(arg.dateStr);\n              _context.next = 3;\n              return setDateClicked(arg.dateStr);\n\n            case 3:\n              dispatch({\n                type: \"modalClick\"\n              });\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleDateClick(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, \"Welcome to \", user.first_name, \"'s Calendar! Cick a day to add en event!\"), /*#__PURE__*/React.createElement(FullCalendar, {\n    plugins: [dayGridPlugin, interactionPlugin],\n    initialView: \"dayGridMonth\",\n    dateClick: handleDateClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }), state.modal ? /*#__PURE__*/React.createElement(EventInput, {\n    props: dateClicked,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 22\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 59\n    }\n  }));\n}\n\nexport default AltUserCalendar;","map":{"version":3,"sources":["C:/Users/benja/OneDrive/Desktop/Code/project3/calendule/client/src/components/AltUserCal/index.js"],"names":["React","useState","useEffect","FullCalendar","dayGridPlugin","interactionPlugin","API","useParams","EventInput","useStoreContext","AltUserCalendar","id","state","dispatch","user","setUser","dateClicked","setDateClicked","getUser","then","res","console","log","data","handleDateClick","arg","dateStr","type","first_name","modal"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,YAAP,MAAyB,qBAAzB;AACA,OAAOC,aAAP,MAA0B,uBAA1B;AACA,OAAOC,iBAAP,MAA8B,2BAA9B;AACA,OAAOC,GAAP,MAAgB,iBAAhB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,SAASC,eAAT,QAAgC,yBAAhC;;AAEA,SAASC,eAAT,GAA2B;AACzB,mBAAeH,SAAS,EAAxB;AAAA,MAAQI,EAAR,cAAQA,EAAR;;AAEA,yBAA0BF,eAAe,EAAzC;AAAA;AAAA,MAAOG,KAAP;AAAA,MAAcC,QAAd;;AACA,kBAAwBZ,QAAQ,CAAC,EAAD,CAAhC;AAAA;AAAA,MAAOa,IAAP;AAAA,MAAaC,OAAb;;AAEA,mBAAsCd,QAAQ,CAAC,EAAD,CAA9C;AAAA;AAAA,MAAOe,WAAP;AAAA,MAAoBC,cAApB;;AAEAf,EAAAA,SAAS,CAAC,YAAM;AACdI,IAAAA,GAAG,CAACY,OAAJ,CAAYP,EAAZ,EAAgBQ,IAAhB,CAAqB,UAACC,GAAD,EAAS;AAC5BC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB;AACAR,MAAAA,OAAO,CAACK,GAAG,CAACG,IAAL,CAAP;AACD,KAHD;AAID,GALQ,EAKN,EALM,CAAT;;AAOA,MAAMC,eAAe;AAAA,wEAAG,iBAAOC,GAAP;AAAA;AAAA;AAAA;AAAA;AACtBJ,cAAAA,OAAO,CAACC,GAAR,CAAYG,GAAG,CAACC,OAAhB;AADsB;AAAA,qBAEhBT,cAAc,CAACQ,GAAG,CAACC,OAAL,CAFE;;AAAA;AAGtBb,cAAAA,QAAQ,CAAC;AACPc,gBAAAA,IAAI,EAAE;AADC,eAAD,CAAR;;AAHsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAfH,eAAe;AAAA;AAAA;AAAA,KAArB;;AAQA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACcV,IAAI,CAACc,UADnB,6CADF,eAIE,oBAAC,YAAD;AACE,IAAA,OAAO,EAAE,CAACxB,aAAD,EAAgBC,iBAAhB,CADX;AAEE,IAAA,WAAW,EAAC,cAFd;AAGE,IAAA,SAAS,EAAEmB,eAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EASGZ,KAAK,CAACiB,KAAN,gBAAc,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAEb,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAd,gBAAmD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATtD,CADF;AAaD;;AAED,eAAeN,eAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport FullCalendar from \"@fullcalendar/react\";\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\r\nimport interactionPlugin from \"@fullcalendar/interaction\";\r\nimport API from \"../../utils/API\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport EventInput from \"../eventInput\";\r\nimport { useStoreContext } from \"../../utils/GlobalState\";\r\n\r\nfunction AltUserCalendar() {\r\n  const { id } = useParams();\r\n\r\n  const [state, dispatch] = useStoreContext();\r\n  const [user, setUser] = useState({});\r\n\r\n  const [dateClicked, setDateClicked] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    API.getUser(id).then((res) => {\r\n      console.log(res.data);\r\n      setUser(res.data);\r\n    });\r\n  }, []);\r\n\r\n  const handleDateClick = async (arg) => {\r\n    console.log(arg.dateStr);\r\n    await setDateClicked(arg.dateStr);\r\n    dispatch({\r\n      type: \"modalClick\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>\r\n        Welcome to {user.first_name}'s Calendar! Cick a day to add en event!\r\n      </h1>\r\n      <FullCalendar\r\n        plugins={[dayGridPlugin, interactionPlugin]}\r\n        initialView=\"dayGridMonth\"\r\n        dateClick={handleDateClick}\r\n      />\r\n      {state.modal ? <EventInput props={dateClicked} /> : <div></div>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AltUserCalendar;\r\n"]},"metadata":{},"sourceType":"module"}